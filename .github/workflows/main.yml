name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Exit with success
        run: exit 0

  Unit_Test:
    needs: Build
    runs-on: windows-latest
    steps:
      - name: Exit with success
        run: exit 0

  Deploy_to_Development:
    needs: Unit_Test
    runs-on: windows-latest
    permissions:
      id-token: write # Needed to authenticate with GitHub Packages
      contents: read # Needed to read the contents of the repository
    environment:
      name: development

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_SECRET }}
      - name: Approve Development Deployment
        uses: trstringer/manual-approval@v1.7.0
        with:
          approvers: MohanSGond
          secret: ${{ steps.generate_token.outputs.token }}
          issue-title: Approve Development Deployment
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::750344256621:role/CII-GitHub-Account-IAM-Role
          role-duration-seconds: 900 # optional, defaults to 3600 seconds
          aws-region: us-east-1 # use your region here.
      - name: Deploy to AWS Lambda
        run: npx serverless deploy

  Deploy_to_QA:
    needs: Unit_Test
    runs-on: windows-latest
    permissions:
      id-token: write # Needed to authenticate with GitHub Packages
      contents: read # Needed to read the contents of the repository
    environment:
      name: qa

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::750344256621:role/CII-GitHub-Account-IAM-Role
          role-duration-seconds: 900 # optional, defaults to 3600 seconds
          aws-region: us-east-1 # use your region here.
      - name: Deploy to AWS Lambda
        run: npx serverless deploy

  Deploy_to_Staging_OR_Pre-Prod_OR_UAT:
    needs: Deploy_to_QA
    runs-on: windows-latest
    permissions:
      id-token: write # Needed to authenticate with GitHub Packages
      contents: read # Needed to read the contents of the repository
    environment:
      name: uat

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::750344256621:role/CII-GitHub-Account-IAM-Role
          role-duration-seconds: 900 # optional, defaults to 3600 seconds
          aws-region: us-east-1 # use your region here.
      - name: Deploy to AWS Lambda
        run: npx serverless deploy

  Deploy_to_Production:
    needs: Deploy_to_Staging_OR_Pre-Prod_OR_UAT
    runs-on: windows-latest
    permissions:
      id-token: write # Needed to authenticate with GitHub Packages
      contents: read # Needed to read the contents of the repository
    environment:
      name: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::750344256621:role/CII-GitHub-Account-IAM-Role
          role-duration-seconds: 900 # optional, defaults to 3600 seconds
          aws-region: us-east-1 # use your region here.
      - name: Deploy to AWS Lambda
        run: npx serverless deploy
